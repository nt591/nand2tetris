// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    // use upper 2 bits to select a RAM4k
    // user lower 9 bits to select a register
    DMux4Way(in=load, sel=address[12..13],
        a=da, b=db, c=dc, d=dd);

    RAM4K(in=in, load=da, address=address[0..11], out=oa);
    RAM4K(in=in, load=db, address=address[0..11], out=ob);
    RAM4K(in=in, load=dc, address=address[0..11], out=oc);
    RAM4K(in=in, load=dd, address=address[0..11], out=od);

    // MUX that back based on selected RAM chip

    Mux4Way16(a=oa, b=ob, c=oc, d=od, sel=address[12..13], out=out);
}